% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LossFunctions.R
\name{loss_Poisson_math}
\alias{loss_Poisson_math}
\title{Laurae's Poisson Error (math function)}
\usage{
loss_Poisson_math(x, y)
}
\arguments{
\item{x}{The \code{predictions}.}

\item{y}{The \code{labels}.}
}
\value{
The Laurae's Poisson Error per value.
}
\description{
This function computes the Laurae's Poisson Error loss per value provided \code{x, y} (preds, labels) counts.
}
\details{
This loss function is strictly positive, therefore defined in \code{\]0, +Inf\[}. It penalizes lower values more heavily, and as such is a good fit for typical problems requiring fine tuning when undercommitting on the predictions. The negative values are cancelled out to make the loss function positive, with \code{loss = 0} when \code{y_true = y_pred}. This loss function is experimental.

Loss Formula : \eqn{(y_pred - y_true * log(y_pred))}

Gradient Formula : \eqn{1 - y_true/y_pred}

Hessian Formula : \eqn{y_true/(y_pred * y_pred)}
}
\examples{
\dontrun{
SymbolicLoss(fc = loss_poisson_math, xmin = 1, xmax = 50, y = rep(10, 21))
}

}

